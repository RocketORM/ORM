<?php

{% block namespace %}
namespace {{ table.schema.namespace }}\TableMap;
{% endblock %}

{% block import %}
use Rocket\ORM\Model\Map\TableMap;
{% endblock import %}

{% block comment %}
/**
 * Generated by Rocket ORM.
 * Do not edit this file, use the generation command instead.
 *
 * "{{ table.schema.database }}.{{ table.name }}" Table Map
 */
{% endblock %}
{% block definition %}
class {{ table.phpName }}TableMap extends {% block extends 'TableMap' %}
{% endblock %}

{
    /**
     * Configure the table map
     */
    public function configure()
    {
        {% block schema -%}
        $this->setConnectionName('{{ table.schema.connection }}');
        $this->setDatabase('{{ table.schema.database }}');
        {% endblock %}

        {% block model -%}
        $this->setTableName('{{ table.name }}');
        $this->setClassName('{{ table.phpName }}');
        $this->setClassNamespace('{{ table.schema.escapedNamespace }}');
        {% endblock %}

        {% block columns -%}
        {% for column in table.columns -%}
            $this->addColumn('
                {{- column.name }}', '{{ column.phpName }}', self::{{ column.typeConstantName }}, {{ null == column.size ? 'null' : column.size }},
                {{- null == column.decimal ? ' null' : ' ' ~ column.decimal }},
                {%- if null == column.values %} null{% else %} ['{{ column.values|join("', '")|raw }}']{% endif %},
                {%- if column.default is sameas(false) %} false{% elseif column.default is sameas(true) %} true{% elseif column.default is sameas(null) %} null{% else %} '{{ column.default }}'{% endif %},
                {{- column.isRequired ? ' true' : ' false' -}}
            );
        {% endfor %}
        {%- endblock %}

        {% block primary_keys -%}
        {% for primaryKey in table.primaryKeys -%}
            $this->addPrimaryKey('{{ primaryKey.name }}', {{ primaryKey.isAutoIncrement ? 'true' : 'false' }});
        {% endfor %}
        {%- endblock %}

        {% block relations -%}
        {% for relation in table.relations -%}
            $this->addRelation('{{ relation.with }}', '{{ relation.phpName }}', self::{{ relation.typeConstantName }}, '{{ relation.local }}', '{{ relation.foreign }}');
        {% endfor %}
        {%- endblock %}

        {%- block custom_configure '' %}

    }

    {%- block custom '' %}

}
